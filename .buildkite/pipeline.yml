steps:
- group: "setup_and_quality"
  key: "setup_and_quality"
  steps:
    # Should NOT include, but we need to make sure `main` is updated
    - label: "update main"
      plugins:
        - docker#v5.12.0:
            image: "huggingface/transformers-quality"
            always-pull: true
      commands:
        - "git fetch origin"
        - "git branch -D main"
        - "git checkout main"
        - "git pull origin main"
        - "git branch --show-current"
        - "echo $(git log -n 1)"
        - "git pull origin main"
        - "git branch --show-current"
        - "echo $(git log -n 1)"
      key: update_main
    - label: "fetch_tests"
      plugins:
        - docker#v5.12.0:
            image: "huggingface/transformers-quality"
            always-pull: true
      commands:
        - "echo $(python3 --version)"
#        - "echo $(git branch | sed -n '/\* /s///p')"
        - "echo $(git log -n 1)"
        - 'echo "pip install packages"'
        # - "uv pip install -U -e ."
#        - "python -m pip install -U -e ."
        - "python -m pip install -e ."
        - "mkdir -p test_preparation"
#        - 'echo "utils/tests_fetcher.py" without tee'
#        - "python utils/tests_fetcher.py"
        - 'echo "utils/tests_fetcher.py" with tee'
        - "python utils/tests_fetcher.py | tee tests_fetched_summary.txt"
##        - "python utils/tests_fetcher.py --filter_tests"
        - "ls -la test_preparation"
        - "ls -la test_preparation/tests_torch_test_list.txt"
        - 'echo "show tests_torch_test_list.txt"'
        - "tail -10000 test_preparation/tests_torch_test_list.txt"
        - 'echo "show tests_generate_test_list.txt"'
        - "tail -10000 test_preparation/tests_generate_test_list.txt"
        - 'echo "show pipelines_torch_test_list.txt"'
        - "tail -10000 test_preparation/pipelines_torch_test_list.txt"
      artifact_paths:
        - "test_preparation/*"
      key: fetch_tests
#    - label: "run_tests_dummy"
#      commands:
#        - "mkdir test_preparation_local"
#        - 'buildkite-agent artifact download "test_preparation/*" test_preparation_local/ --step fetch_tests'
    - label: "run_tests"
      plugins:
#        - artifacts#v1.9.0:
#            download: "test_preparation/*"
        - docker#v5.12.0:
            image: "huggingface/transformers-quality"
            always-pull: true
            mount-buildkite-agent: true
      commands:
        - "ls -la"
        - "echo $(python3 --version)"
        - "mkdir test_preparation"
        - 'buildkite-agent artifact download "test_preparation/*" test_preparation/ --step fetch_tests'
        - 'echo "show tests_torch_test_list.txt"'
        - "ls -la test_preparation"
        - "tail -10000 test_preparation/tests_torch_test_list.txt"
#        # For the record only
#        - 'if [ "1" = "1" ]; then echo "1"; fi'
#        - 'if [ "1" = "0" ]; then echo "1"; else echo "0"; fi'
#        - |
#          if [ "1" = "1" ]; then
#            echo 1
#          fi
#        - |
#          if [ "1" = "0" ]; then
#            echo 1
#          else
#            echo 0
#          fi
      key: run_tests

#    - label: "Build 1"
#  #    plugins:
#  #      - docker#v5.12.0:
#  #          image: "python:3.10-slim"
#  #          always-pull: true
#      commands:
#        - "echo 3"
#        - "echo 2"
#        - "mkdir logs"
#        - "echo 1 > logs/log.txt"
#        - "ls -l"
#        - "ls -l logs"
#        - "ls -l logs/log.txt"
##        - "sleep 5"
#      artifact_paths:
#        - "logs/log.txt"
#  #      - "conda init"
#  #      - "conda activate py39"
#  #      - "echo 4"
#  #      - "conda deactivate"
#  #      - "echo 6"
#  #      - "echo 7"
#      key: build-1
##    - label: "Build 2"
##  #    plugins:
##  #      - docker#v5.12.0:
##  #          image: "python:3.10-slim"
##  #          always-pull: true
##      commands:
##        - "echo 1"
##        - "echo 2"
##        - "echo 3"
##        - "sleep 5"
##  #      - "conda init"
##  #      - "conda activate py39"
##  #      - "echo 4"
##  #      - "conda deactivate"
##  #      - "echo 6"
##  #      - "echo 7"
##      key: build-2
##    - label: "Build 3"
##  #    plugins:
##  #      - docker#v5.12.0:
##  #          image: "python:3.10-slim"
##  #          always-pull: true
##      commands:
##        - "echo 1"
##        - "echo 2"
##        - "echo 3"
##        - "sleep 5"
##  #      - "conda init"
##  #      - "conda activate py39"
##  #      - "echo 4"
##  #      - "conda deactivate"
##  #      - "echo 6"
##  #      - "echo 7"
##      key: build-3
#- group: ":lock_with_ink_pen: Good boy!"
#  key: "group-2"
#  steps:
#    - label: "Build 1"
#      commands:
#        - "echo 3"
#        - "echo 2"
